In Access 2016, you can check if a temporary table exists using VBA, and if it does, drop it and recreate it. Here's how you can do this:

Step 1: Check if the Table Exists
You can check if a table exists by attempting to access it in the TableDefs collection of the current database. If it exists, you can drop it.

Step 2: Drop the Table if It Exists
If the table exists, you can delete it using the DoCmd.DeleteObject method.

Step 3: Recreate the Table
After dropping the table, you can recreate it using an SQL CREATE TABLE statement or by using DAO.

Example Code:
Here’s a complete VBA code example:

Sub CreateTempTable()
    Dim db As DAO.Database
    Dim tblName As String
    Dim sql As String

    Set db = CurrentDb
    tblName = "TempTableName" ' Replace with your temp table name

    ' Check if the table exists
    If TableExists(tblName) Then
        ' Drop the table if it exists
        DoCmd.DeleteObject acTable, tblName
    End If

    ' Recreate the table
    sql = "CREATE TABLE " & tblName & " (" & _
          "ID AUTOINCREMENT PRIMARY KEY, " & _
          "FieldName1 TEXT(255), " & _
          "FieldName2 INTEGER" & _
          ");"
    
    db.Execute sql

    MsgBox "Temporary table created successfully!", vbInformation
End Sub

Function TableExists(tblName As String) As Boolean
    Dim db As DAO.Database
    Dim tdf As DAO.TableDef

    Set db = CurrentDb

    On Error Resume Next
    Set tdf = db.TableDefs(tblName)
    On Error GoTo 0

    If Not tdf Is Nothing Then
        TableExists = True
    Else
        TableExists = False
    End If

    Set tdf = Nothing
    Set db = Nothing
End Function

In Access 2016, you can check if a temporary table exists using VBA, and if it does, drop it and recreate it. Here's how you can do this:

Step 1: Check if the Table Exists
You can check if a table exists by attempting to access it in the TableDefs collection of the current database. If it exists, you can drop it.

Step 2: Drop the Table if It Exists
If the table exists, you can delete it using the DoCmd.DeleteObject method.

Step 3: Recreate the Table
After dropping the table, you can recreate it using an SQL CREATE TABLE statement or by using DAO.

Example Code:
Here’s a complete VBA code example:

vba
Copy code
Sub CreateTempTable()
    Dim db As DAO.Database
    Dim tblName As String
    Dim sql As String

    Set db = CurrentDb
    tblName = "TempTableName" ' Replace with your temp table name

    ' Check if the table exists
    If TableExists(tblName) Then
        ' Drop the table if it exists
        DoCmd.DeleteObject acTable, tblName
    End If

    ' Recreate the table
    sql = "CREATE TABLE " & tblName & " (" & _
          "ID AUTOINCREMENT PRIMARY KEY, " & _
          "FieldName1 TEXT(255), " & _
          "FieldName2 INTEGER" & _
          ");"
    
    db.Execute sql

    MsgBox "Temporary table created successfully!", vbInformation
End Sub

Function TableExists(tblName As String) As Boolean
    Dim db As DAO.Database
    Dim tdf As DAO.TableDef

    Set db = CurrentDb

    On Error Resume Next
    Set tdf = db.TableDefs(tblName)
    On Error GoTo 0

    If Not tdf Is Nothing Then
        TableExists = True
    Else
        TableExists = False
    End If

    Set tdf = Nothing
    Set db = Nothing
End Function

How It Works:
TableExists Function:

This function checks if a table with the name tblName exists in the TableDefs collection of the current database.
If the table exists, it returns True; otherwise, it returns False.
CreateTempTable Subroutine:

The subroutine first checks if the temporary table exists by calling the TableExists function.
If the table exists, it uses DoCmd.DeleteObject acTable, tblName to delete it.
After dropping the table, it creates a new table with the specified fields using an SQL CREATE TABLE statement executed via db.Execute.
Notes:
Error Handling: The On Error Resume Next statement is used to handle the error that would occur if the table doesn't exist when trying to access it. This prevents the code from crashing.
Customization: Replace "TempTableName" and the CREATE TABLE SQL statement with your specific table name and structure.
This code should help you manage temporary tables in Access 2016 using VBA effectively.