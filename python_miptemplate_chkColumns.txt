import os
import shutil
import pandas as pd
import win32com.client

# ‚úÖ Default Paths (User Can Change)
DEFAULT_TEMPLATE_PATH = r"C:\mip_templates\template.xlsx"
DEFAULT_SOURCE_FOLDER = r"C:\path\to\source"
DEFAULT_DEST_FOLDER = r"C:\path\to\destination"

# ‚úÖ User Input (With Defaults)
template_path = input(f"Enter template path [{DEFAULT_TEMPLATE_PATH}]: ").strip() or DEFAULT_TEMPLATE_PATH
source_folder = input(f"Enter source folder [{DEFAULT_SOURCE_FOLDER}]: ").strip() or DEFAULT_SOURCE_FOLDER
dest_folder = input(f"Enter destination folder [{DEFAULT_DEST_FOLDER}]: ").strip() or DEFAULT_DEST_FOLDER

# ‚úÖ Ensure Destination Folder Exists
os.makedirs(dest_folder, exist_ok=True)

# ‚úÖ Debugging: Print Selected Paths
print(f"\nüîç Source Folder: {source_folder}")
print(f"üìÇ Destination Folder: {dest_folder}")
print(f"üìÑ Template File: {template_path}")

# ‚úÖ Special Formatting Rules
TEXT_COLUMNS = ["ID", "Code", "SerialNumber"]  # Text (Preserve Leading Zeros)
CURRENCY_COLUMNS = ["Price", "Amount", "TotalCost"]  # Currency
DATE_COLUMNS = ["OrderDate", "ShipmentDate"]  # Dates

def detect_delimiter(file_path):
    """Detects whether a file is tab-delimited or comma-delimited."""
    with open(file_path, "r", encoding="utf-8") as f:
        first_line = f.readline()
        if "\t" in first_line:
            return "\t"
        else:
            return ","

def convert_xls_to_xlsx(file_path):
    """Converts a mislabeled .xls file to a proper .xlsx format with MIP label."""
    try:
        print(f"üöÄ Processing: {file_path}")

        # ‚úÖ Step 1: Copy the MIP-Labeled Template
        new_xlsx_path = os.path.join(dest_folder, os.path.basename(file_path).replace(".xls", ".xlsx"))
        shutil.copy(templa
